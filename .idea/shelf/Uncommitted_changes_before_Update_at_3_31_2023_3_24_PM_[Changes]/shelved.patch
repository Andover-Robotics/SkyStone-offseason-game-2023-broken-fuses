Index: TeamCode/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// build.gradle in TeamCode\r\n//\r\n// Most of the definitions for building your module reside in a common, shared\r\n// file 'build.common.gradle'. Being factored in this way makes it easier to\r\n// integrate updates to the FTC into your code. If you really need to customize\r\n// the build definitions, you can place those customizations in this file, but\r\n// please think carefully as to whether such customizations are really necessary\r\n// before doing so.\r\n\r\n\r\n// Custom definitions may go here\r\n\r\n// Include common definitions from above.\r\napply from: '../build.common.gradle'\r\napply from: '../build.dependencies.gradle'\r\n\r\nandroid {\r\n    namespace = 'org.firstinspires.ftc.teamcode'\r\n\r\n    packagingOptions {\r\n        jniLibs.useLegacyPackaging true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation project(':FtcRobotController')\r\n    annotationProcessor files('lib/OpModeAnnotationProcessor.jar')\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/build.gradle b/TeamCode/build.gradle
--- a/TeamCode/build.gradle	(revision 8f956f36282537d8f511c769fdd17077d2e64db1)
+++ b/TeamCode/build.gradle	(date 1679690467029)
@@ -26,4 +26,5 @@
 dependencies {
     implementation project(':FtcRobotController')
     annotationProcessor files('lib/OpModeAnnotationProcessor.jar')
+    implementation 'org.ftclib.ftclib:core:2.1.1'
 }
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1680120134465)
+++ b/.idea/compiler.xml	(date 1680120134465)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1680120134437)
+++ b/.idea/misc.xml	(date 1680120134437)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: build.common.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * build.common.gradle\r\n *\r\n * Try to avoid editing this file, as it may be updated from time to time as the FTC SDK\r\n * evolves. Rather, if it is necessary to customize the build process, do those edits in\r\n * the build.gradle file in TeamCode.\r\n *\r\n * This file contains the necessary content of the 'build.gradle' files for robot controller\r\n * applications built using the FTC SDK. Each individual 'build.gradle' in those applications\r\n * can simply contain the one line:\r\n *\r\n *      apply from: '../build.common.gradle'\r\n *\r\n * which will pick up this file here. This approach allows makes it easier to integrate\r\n * updates to the FTC SDK into your code.\r\n */\r\n\r\nimport java.util.regex.Pattern\r\n\r\napply plugin: 'com.android.application'\r\n\r\nandroid {\r\n\r\n    compileSdkVersion 29\r\n\r\n    signingConfigs {\r\n        release {\r\n            def apkStoreFile = System.getenv(\"APK_SIGNING_STORE_FILE\")\r\n            if (apkStoreFile != null) {\r\n                keyAlias System.getenv(\"APK_SIGNING_KEY_ALIAS\")\r\n                keyPassword System.getenv(\"APK_SIGNING_KEY_PASSWORD\")\r\n                storeFile file(System.getenv(\"APK_SIGNING_STORE_FILE\"))\r\n                storePassword System.getenv(\"APK_SIGNING_STORE_PASSWORD\")\r\n            } else {\r\n                keyAlias 'androiddebugkey'\r\n                keyPassword 'android'\r\n                storeFile rootProject.file('libs/ftc.debug.keystore')\r\n                storePassword 'android'\r\n            }\r\n        }\r\n\r\n        debug {\r\n            keyAlias 'androiddebugkey'\r\n            keyPassword 'android'\r\n            storeFile rootProject.file('libs/ftc.debug.keystore')\r\n            storePassword 'android'\r\n        }\r\n    }\r\n\r\n    aaptOptions {\r\n        noCompress \"tflite\"\r\n    }\r\n\r\n    defaultConfig {\r\n        signingConfig signingConfigs.debug\r\n        applicationId 'com.qualcomm.ftcrobotcontroller'\r\n        minSdkVersion 23\r\n        //noinspection ExpiredTargetSdkVersion\r\n        targetSdkVersion 28\r\n\r\n        /**\r\n         * We keep the versionCode and versionName of robot controller applications in sync with\r\n         * the master information published in the AndroidManifest.xml file of the FtcRobotController\r\n         * module. This helps avoid confusion that might arise from having multiple versions of\r\n         * a robot controller app simultaneously installed on a robot controller device.\r\n         *\r\n         * We accomplish this with the help of a funky little Groovy script that maintains that\r\n         * correspondence automatically.\r\n         *\r\n         * @see <a href=\"http://developer.android.com/tools/building/configuring-gradle.html\">Configure Your Build</a>\r\n         * @see <a href=\"http://developer.android.com/tools/publishing/versioning.html\">Versioning Your App</a>\r\n         */\r\n        def manifestFile = project(':FtcRobotController').file('src/main/AndroidManifest.xml');\r\n        def manifestText = manifestFile.getText()\r\n        //\r\n        def vCodePattern = Pattern.compile(\"versionCode=\\\"(\\\\d+(\\\\.\\\\d+)*)\\\"\")\r\n        def matcher = vCodePattern.matcher(manifestText)\r\n        matcher.find()\r\n        def vCode = Integer.parseInt(matcher.group(1))\r\n        //\r\n        def vNamePattern = Pattern.compile(\"versionName=\\\"(.*)\\\"\")\r\n        matcher = vNamePattern.matcher(manifestText);\r\n        matcher.find()\r\n        def vName = matcher.group(1)\r\n        //\r\n        versionCode vCode\r\n        versionName vName\r\n    }\r\n\r\n    // Advanced user code might just want to use Vuforia directly, so we set up the libs as needed\r\n    // http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.BuildType.html\r\n    buildTypes {\r\n        release {\r\n            signingConfig signingConfigs.release\r\n\r\n            ndk {\r\n                abiFilters \"armeabi-v7a\", \"arm64-v8a\"\r\n            }\r\n        }\r\n        debug {\r\n            debuggable true\r\n            jniDebuggable true\r\n            ndk {\r\n                abiFilters \"armeabi-v7a\", \"arm64-v8a\"\r\n            }\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    packagingOptions {\r\n        pickFirst '**/*.so'\r\n    }\r\n    sourceSets.main {\r\n        jni.srcDirs = []\r\n        jniLibs.srcDir rootProject.file('libs')\r\n    }\r\n    ndkVersion '21.3.6528147'\r\n}\r\n\r\nrepositories {\r\n    flatDir {\r\n        dirs rootProject.file('libs')\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.common.gradle b/build.common.gradle
--- a/build.common.gradle	(revision 8f956f36282537d8f511c769fdd17077d2e64db1)
+++ b/build.common.gradle	(date 1679690486327)
@@ -54,7 +54,7 @@
     defaultConfig {
         signingConfig signingConfigs.debug
         applicationId 'com.qualcomm.ftcrobotcontroller'
-        minSdkVersion 23
+        minSdkVersion 24
         //noinspection ExpiredTargetSdkVersion
         targetSdkVersion 28
 
@@ -125,5 +125,6 @@
     flatDir {
         dirs rootProject.file('libs')
     }
+    mavenCentral()
 }
 
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Built application files\r\n*.apk\r\n*.aar\r\n*.ap_\r\n*.aab\r\n\r\n!libs/*.aar\r\n\r\n# Files for the ART/Dalvik VM\r\n*.dex\r\n\r\n# Java class files\r\n*.class\r\n\r\n# Generated files\r\nbin/\r\ngen/\r\nout/\r\n#  Uncomment the following line in case you need and you don't have the release build type files in your app\r\n# release/\r\n\r\n# Gradle files\r\n.gradle/\r\nbuild/\r\n\r\n# Local configuration file (sdk path, etc)\r\nlocal.properties\r\n\r\n# Proguard folder generated by Eclipse\r\nproguard/\r\n\r\n# Log Files\r\n*.log\r\n\r\n# Android Studio Navigation editor temp files\r\n.navigation/\r\n\r\n# Android Studio captures folder\r\ncaptures/\r\n\r\n# IntelliJ\r\n*.iml\r\n.idea/workspace.xml\r\n.idea/tasks.xml\r\n.idea/gradle.xml\r\n.idea/assetWizardSettings.xml\r\n.idea/dictionaries\r\n.idea/libraries\r\n# Android Studio 3 in .gitignore file.\r\n.idea/caches\r\n.idea/modules.xml\r\n# Comment next line if keeping position of elements in Navigation Editor is relevant for you\r\n.idea/navEditor.xml\r\n\r\n# Keystore files\r\n# Uncomment the following lines if you do not want to check your keystore files in.\r\n#*.jks\r\n#*.keystore\r\n\r\n# External native build folder generated in Android Studio 2.2 and later\r\n.externalNativeBuild\r\n.cxx/\r\n\r\n# Google Services (e.g. APIs or Firebase)\r\n# google-services.json\r\n\r\n# Freeline\r\nfreeline.py\r\nfreeline/\r\nfreeline_project_description.json\r\n\r\n# fastlane\r\nfastlane/report.xml\r\nfastlane/Preview.html\r\nfastlane/screenshots\r\nfastlane/test_output\r\nfastlane/readme.md\r\n\r\n# Version control\r\nvcs.xml\r\n\r\n# lint\r\nlint/intermediates/\r\nlint/generated/\r\nlint/outputs/\r\nlint/tmp/\r\n# lint/reports/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 8f956f36282537d8f511c769fdd17077d2e64db1)
+++ b/.gitignore	(date 1679690566710)
@@ -85,3 +85,7 @@
 lint/outputs/
 lint/tmp/
 # lint/reports/
+
+
+#vscode settings
+.vscode/
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1680120043772)
+++ b/.idea/.gitignore	(date 1680120043772)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
